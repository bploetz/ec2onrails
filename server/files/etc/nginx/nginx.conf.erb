user  nginx nginx;
worker_processes  6;
pid /var/run/nginx.pid;

events {
  worker_connections  1024;
  use epoll; # linux only!
}

http {
  # global passenger settings
  passenger_root <%= `/usr/bin/passenger-config --root`.strip %>;
  passenger_default_user app;
  passenger_pool_idle_time 0;
  rails_spawn_method conservative;
  rails_framework_spawner_idle_time 0;
  rails_app_spawner_idle_time 0;
  # We leave passenger_max_pool_size at the default for now. (It might
  # eventually be an ERB variable that can be set automatically based on the
  # instance type and what roles it's in.)
  # passenger_max_pool_size 6;
  
  include /etc/nginx/mime.types;
  
  # set a default type for the rare situation that
  # nothing matches from the mime-type include
  default_type  application/octet-stream;

  # configure log format
  log_format main '$remote_addr [$time_local] '
                  '"$scheme $host $request" $status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for" '
                  '($request_time)';
  
  access_log  /mnt/log/nginx/access.log  main;

  # main error log - Do not comment out. If you do not want the log file set this to /dev/null
  # use debug instead of notice if you want additional information
  error_log  /mnt/log/nginx/error.log notice;

  sendfile on;

  tcp_nopush        on;
  tcp_nodelay       on;
  gzip              on;
  gzip_http_version 1.1;
  gzip_vary on;
  gzip_comp_level   6;
  gzip_proxied      any;
  gzip_types        application/json application/x-javascript application/xhtml+xml application/xml application/xml+rss text/css text/javascript text/plain text/xml ;
  # make sure gzip does not lose large gzipped js or css files
  # see http://blog.leetsoft.com/2007/7/25/nginx-gzip-ssl
  gzip_buffers 16 8k;

  # Disable gzip for certain browsers. IE6 prior to SP2 doesn't handle gzip properly.
  gzip_disable “MSIE [1-6].(?!.*SV1)”;

  include /etc/nginx/sites-enabled/*.conf;
}
